GNU bash, version 4.4.12(1)-release (x86_64-pc-msys)

These shell commands are defined internally.  
Type `help' to see this list.
Type `help name' to find out more about the function `name'.

Use `info bash' to find out more about the shell in general.

Use `man -k' or `info' to find out more about commands not in this list.



A star (*) next to a name means that the command is disabled.


 job_spec [&]                            history [-c] [-d offset] [n] or hist>

 (( expression ))                        if COMMANDS; then COMMANDS; [ elif C>

 . filename [arguments]                  jobs [-lnprs] [jobspec ...] or jobs >

 :                                       kill [-s sigspec | -n signum | -sigs>

 [ arg... ]                              let arg [arg ...]

 [[ expression ]]                        local [option] name[=value] ...

 alias [-p] [name[=value] ... ]          logout [n]

 bg [job_spec ...]                       mapfile [-d delim] [-n count] [-O or>

 bind [-lpsvPSVX] [-m keymap] [-f file>  popd [-n] [+N | -N]

 break [n]                               printf [-v var] format [arguments]

 builtin [shell-builtin [arg ...]]       pushd [-n] [+N | -N | dir]

 caller [expr]                           pwd [-LPW]

 case WORD in [PATTERN [| PATTERN]...)>  read [-ers] [-a array] [-d delim] [->

 cd [-L|[-P [-e]] [-@]] [dir]            readarray [-n count] [-O origin] [-s>

 command [-pVv] command [arg ...]        readonly [-aAf] [name[=value] ...] o>

 compgen [-abcdefgjksuv] [-o option] [>  return [n]

 complete [-abcdefgjksuv] [-pr] [-DE] >  select NAME [in WORDS ... ;] do COMM>

 compopt [-o|+o option] [-DE] [name ..>  set [-abefhkmnptuvxBCHP] [-o option->

 continue [n]                            shift [n]

 coproc [NAME] command [redirections]    shopt [-pqsu] [-o] [optname ...]

 declare [-aAfFgilnrtux] [-p] [name[=v>  source filename [arguments]

 dirs [-clpv] [+N] [-N]                  suspend [-f]

 disown [-h] [-ar] [jobspec ... | pid >  test [expr]

 echo [-neE] [arg ...]                   time [-p] pipeline

 enable [-a] [-dnps] [-f filename] [na>  times

 eval [arg ...]                          trap [-lp] [[arg] signal_spec ...]

 exec [-cl] [-a name] [command [argume>  true

 exit [n]                                type [-afptP] name [name ...]

 export [-fn] [name[=value] ...] or ex>  typeset [-aAfFgilnrtux] [-p] name[=v>

 false                                   ulimit [-SHabcdefiklmnpqrstuvxPT] [l>

 fc [-e ename] [-lnr] [first] [last] o>  umask [-p] [-S] [mode]

 fg [job_spec]                           unalias [-a] name [name ...]

 for NAME [in WORDS ... ] ; do COMMAND>  unset [-f] [-v] [-n] [name ...]

 for (( exp1; exp2; exp3 )); do COMMAN>  until COMMANDS; do COMMANDS; done

 function name { COMMANDS ; } or name >  variables - Names and meanings of so>

 getopts optstring name [arg]            wait [-n] [id ...]

 hash [-lr] [-p pathname] [-dt] [name >  while COMMANDS; do COMMANDS; done

 help [-dms] [pattern ...]               { COMMANDS ; }


usage: git [--version] [--help] [-C <path>] [-c name=value]

           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]

           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]

           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]

           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)

   clone      Clone a repository into a new directory

   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)

   add        Add file contents to the index

   mv         Move or rename a file, a directory, or a symlink

   reset      Reset current HEAD to the specified state

   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)

   bisect     Use binary search to find the commit that introduced a bug

   grep       Print lines matching a pattern

   log        Show commit logs

   show       Show various types of objects

   status     Show the working tree status

grow, mark and tweak your common history

   branch     List, create, or delete branches

   checkout   Switch branches or restore working tree files

   commit     Record changes to the repository

   diff       Show changes between commits, commit and working tree, etc

   merge      Join two or more development histories together

   rebase     Reapply commits on top of another base tip

   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)

   fetch      Download objects and refs from another repository

   pull       Fetch from and integrate with another repository or a local branch

   push       Update remote refs along with associated objects


'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
